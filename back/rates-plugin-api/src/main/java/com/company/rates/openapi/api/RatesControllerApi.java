/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech) (6.5.0).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
package com.company.rates.openapi.api;

import com.company.rates.openapi.model.CurrenciesDate;
import io.swagger.v3.oas.annotations.ExternalDocumentation;
import io.swagger.v3.oas.annotations.Operation;
import io.swagger.v3.oas.annotations.Parameter;
import io.swagger.v3.oas.annotations.Parameters;
import io.swagger.v3.oas.annotations.media.ArraySchema;
import io.swagger.v3.oas.annotations.media.Content;
import io.swagger.v3.oas.annotations.media.Schema;
import io.swagger.v3.oas.annotations.responses.ApiResponse;
import io.swagger.v3.oas.annotations.security.SecurityRequirement;
import io.swagger.v3.oas.annotations.tags.Tag;
import io.swagger.v3.oas.annotations.enums.ParameterIn;
import org.springframework.http.HttpStatus;
import org.springframework.http.MediaType;
import org.springframework.http.ResponseEntity;
import org.springframework.validation.annotation.Validated;
import org.springframework.web.bind.annotation.*;
import org.springframework.web.context.request.NativeWebRequest;
import org.springframework.web.multipart.MultipartFile;

import javax.validation.Valid;
import javax.validation.constraints.*;
import java.util.List;
import java.util.Map;
import java.util.Optional;
import javax.annotation.Generated;

@Generated(value = "org.openapitools.codegen.languages.SpringCodegen")
@Validated
@Tag(name = "rates-controller", description = "the rates-controller API")
public interface RatesControllerApi {

    /**
     * GET /rates/{date}/currencies
     *
     * @param date  (required)
     * @return OK (status code 200)
     */
    @Operation(
        operationId = "getCurrencies",
        tags = { "rates-controller" },
        responses = {
            @ApiResponse(responseCode = "200", description = "OK", content = {
                @Content(mediaType = "*/*", array = @ArraySchema(schema = @Schema(implementation = String.class)))
            })
        }
    )
    @RequestMapping(
        method = RequestMethod.GET,
        value = "/rates/{date}/currencies",
        produces = "*/*"
    )
    ResponseEntity<List<String>> getCurrencies(
        @Parameter(name = "date", description = "", required = true, in = ParameterIn.PATH) @PathVariable("date") String date
    );


    /**
     * GET /rates/{date}/{currencyCode}
     *
     * @param date  (required)
     * @param currencyCode  (required)
     * @return OK (status code 200)
     */
    @Operation(
        operationId = "getRateByCharCode",
        tags = { "rates-controller" },
        responses = {
            @ApiResponse(responseCode = "200", description = "OK", content = {
                @Content(mediaType = "*/*", schema = @Schema(implementation = CurrenciesDate.class))
            })
        }
    )
    @RequestMapping(
        method = RequestMethod.GET,
        value = "/rates/{date}/{currencyCode}",
        produces = "*/*"
    )
    ResponseEntity<CurrenciesDate> getRateByCharCode(
        @Parameter(name = "date", description = "", required = true, in = ParameterIn.PATH) @PathVariable("date") String date,
        @Parameter(name = "currencyCode", description = "", required = true, in = ParameterIn.PATH) @PathVariable("currencyCode") String currencyCode
    );

}
